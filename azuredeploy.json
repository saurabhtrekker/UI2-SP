{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "location": {
      "type": "string",
      "metadata": {
        "description": "The region to deploy the resources into"
      }
    },
    "srcIPInboundNSG": {
       "type": "string",
       "metadata": {
           "description": "Your source public IP address. Added to the inbound NSG on eth0 (MGMT)"
       },
       "defaultValue": ""
    },
    "ipAddressPrefix": {
       "type": "string",
       "defaultValue": "192.168",
       "metadata": {
          "description": "Default IP address space (/16) of the VNET"
       }
    },
    "virtualNetworkName": {
      "type": "string",
      "metadata": {
        "description": "The name of the Virtual Network"
      },
      "defaultValue": "panwVNET"
    },
    "virtualNetworkAddressRange": {
      "type": "string",
      "metadata": {
        "description": "The address range of the VNET "
      },
      "defaultValue": "192.168.0.0/16"
    },
    "mgmtSubnet": {
      "type": "string",
      "metadata": {
        "description": "The address range of the Mgmt subnet in the VNET"
      },
      "defaultValue": "192.168.0.0/24"
    },
    "mgmtNicIPAddress": {
      "type": "string",
      "metadata": {
        "description": "IP address of the mgmt NIC"
      },
      "defaultValue": "192.168.0.4"
    },
    "untrustSubnet": {
      "type": "string",
      "metadata": {
        "description": "The address range of the Untrust subnet in the VNET"
      },
      "defaultValue": "192.168.1.0/24"
    },
    "untrustNicIPAddress": {
      "type": "string",
      "metadata": {
        "description": "IP address of the untrust NIC"
      },
      "defaultValue": "192.168.1.4"
    },
    "trustSubnet": {
      "type": "string",
      "metadata": {
        "description": "The address range of the Trust subnet in the VNET"
      },
      "defaultValue": "192.168.2.0/24"
    },
    "trustNicIPAddress": {
      "type": "string",
      "metadata": {
        "description": "IP address of the trust NIC"
      },
      "defaultValue": "192.168.2.4"
    },
    "adminUsername": {
      "type": "string",
      "metadata": {
        "description": "The name of the Administrator of the new VM and Domain"
      }
    },
    "adminPassword": {
      "type": "securestring",
      "metadata": {
        "description": "The password forthe Administrator account of the new VM and Domain"
      }
    },
    "baseUrl": {
      "type": "string",
      "metadata": {
        "artifactsBaseUrl": "",
        "description": "URL to acquire other templates"
      },
      "defaultValue": "https://raw.githubusercontent.com/saurabhtrekker/UI2-SP/master"
    },
    "PublicIPNewOrExisting": {
      "type": "string",
      "defaultValue": "new",
      "allowedValues": [
        "new",
        "existing"
      ],
      "metadata": {
        "description": "Indicates whether the Sharepoint farm's IP is new or existing"
      }
    },
    "PublicIPRGName": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "Resource Group containing existing public IP"
      }
    },
    "publicIPAddressName": {
      "type": "string",
      "metadata": {
        "description": "Name of existing public IP resource"
      }
    },
    "PublicIPRGName": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "Resource Group containing existing public IP for Sharepoint"
      }
    },
    "storageAccountName": {
      "type": "string",
      "metadata": {
        "description": "Name prefix of the new storage account created to store the VMs disks"
      }
    },
    "storageAccountNewOrExisting" : {
       "type": "string",
       "defaultValue" : "new",
       "allowedValues" : [
          "new",
          "existing"
       ],
       "metadata": {
          "Description": "Indicates whether the Storage Account is new or existing"
       }
    },
    "storageAccountType": {
      "type": "string",
      "allowedValues": [
        "Standard_LRS",
        "Standard_GRS",
        "Standard_RAGRS",
        "Premium_LRS"
      ],
      "metadata": {
        "description": "The type of the Storage Account created"
      },
      "defaultValue": "Standard_LRS"
    }
  },
  "variables": {
    "nsgName" : "DefaultNSG",
    "mgmtSubnetName": "Mgmt",
    "untrustSubnetName": "Untrust",
    "trustSubnetName": "Trust",
    "mgmtNicName": "fweth0",
    "untrustNicName": "fweth1",
    "trustNicName": "fweth2",
    "VnetID": "[resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworkName'))]",
    "mgmtSubnetRef": "[concat(variables('VnetID'),'/subnets/',variables('mgmtSubnetName'))]",
    "untrustSubnetRef": "[concat(variables('VnetID'),'/subnets/',variables('untrustSubnetName'))]",
    "trustSubnetRef": "[concat(variables('VnetID'),'/subnets/',variables('trustSubnetName'))]",
    "publicIPAddressType": "Dynamic",
    "subnets": [
      {
        "name": "[variables('mgmtSubnetName')]",
        "properties": {
          "addressPrefix": "[parameters('mgmtSubnet')]"
        }
      },
      {
        "name": "[variables('untrustSubnetName')]",
        "properties": {
          "addressPrefix": "[parameters('untrustSubnet')]"
        }
      },
      {
        "name": "[variables('trustSubnetName')]",
        "properties": {
          "addressPrefix": "[parameters('trustSubnet')]"
        }
      }
    ],
    "storageAccountSetupURL" : "[concat(parameters('baseUrl'),'/storageAccount-',parameters('storageAccountNewOrExisting'),'.json')]",
    "nsgSetupURL" : "[concat(parameters('baseUrl'),'/nsg-new.json')]",
    "SettingUpPublicIPUrl": "[concat(parameters('baseUrl'),'/publicip-',parameters('PublicIPNewOrExisting'),'.json')]",
    "vnetSetupURL": "[concat(parameters('baseUrl'),'/vnet-new.json')]",
    "setupNICsURL": "[concat(parameters('baseUrl'),'/setupNICS.json')]"
  },
  "resources": [
    {
      "name": "SettingUpStorageAccount",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2015-01-01",
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('storageAccountSetupURL')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "location": {
            "value": "[parameters('location')]"
          },
          "storageAccountType": {
            "value": "[parameters('storageAccountType')]"
          },
          "storageAccountName": {
            "value": "[parameters('storageAccountName')]"
          }
        }
      }
    },
    {
      "name": "SettingUpPublicIPs",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2015-01-01",
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('SettingUpPublicIPUrl')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "location": {
            "value": "[parameters('location')]"
          },
          "publicIPAddressName": {
            "value": "[parameters('publicIPAddressName')]"
          },
          "publicIPAddressType": {
            "value": "[variables('publicIPAddressType')]"
          },
	  "publicIpRGName" : {
            "value": "[parameters('PublicIPRGName')]"
          }
        }
      }
    },
    {
      "name": "[variables('nsgName')]",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2015-01-01",
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('nsgSetupURL')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "location": {
            "value": "[parameters('location')]"
          },
          "nsgName": {
            "value": "[variables('nsgName')]"
          },
          "srcIPInboundNSG": {
            "value": "[parameters('srcIPInboundNSG')]"
          },
          "ipAddressPrefix": {
            "value": "[parameters('ipAddressPrefix')]"
          }
        }
      }
    },
    {
      "name": "SettingUpVirtualNetwork",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2015-01-01",
      "dependsOn": [
        "[concat('Microsoft.Resources/deployments/', variables('nsgName'))]"
      ],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('vnetSetupURL')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "location": {
            "value": "[parameters('location')]"
          },
          "nsgName": {
            "value": "[variables('nsgName')]"
          },
          "virtualNetworkName": {
            "value": "[parameters('virtualNetworkName')]"
          },
          "virtualNetworkAddressRange": {
            "value": "[parameters('virtualNetworkAddressRange')]"
          },
          "subnets": {
            "value": "[variables('subnets')]"
          }
        }
      }
    },
    {
      "name": "SetupNetworkInterfaces",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2015-01-01",
      "dependsOn": [
        "Microsoft.Resources/deployments/SettingUpVirtualNetwork",
        "Microsoft.Resources/deployments/SettingUpVirtualNetwork"
      ],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('setupNICsURL')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "location": {
            "value": "[parameters('location')]"
          },
          "mgmtNicName": {
            "value": "[variables('mgmtNicName')]"
          },
          "mgmtNicIPAddress": {
            "value": "[parameters('mgmtNicIPAddress')]"
          },
          "mgmtSubnetRef": {
            "value": "[variables('mgmtSubnetRef')]"
          },
          "untrustNicName": {
            "value": "[variables('untrustNicName')]"
          },
          "untrustNicIPAddress": {
            "value": "[parameters('untrustNicIPAddress')]"
          },
          "untrustSubnetRef": {
            "value": "[variables('untrustSubnetRef')]"
          },
          "trustNicName": {
            "value": "[variables('trustNicName')]"
          },
          "trustNicIPAddress": {
            "value": "[parameters('trustNicIPAddress')]"
          },
          "trustSubnetRef": {
            "value": "[variables('trustSubnetRef')]"
          }
        }
      }
    }
  ]
}
